//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/PlayerInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputs : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputs"",
    ""maps"": [
        {
            ""name"": ""PlayerGround"",
            ""id"": ""84f176ce-8596-440c-83cf-bdb7ff928d2d"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""0c3d2577-be03-4d88-91e6-1dd5b5dbad06"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""f860a747-e04c-4822-8154-533307537d56"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""ee964a1d-b7f2-4da3-bf25-ecf9528fb00c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""4f0d1391-c91d-4e2c-9139-4f815f53911e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""c525f3ca-8fb4-412c-8ea5-b2b78be57df2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""b337fe4b-ef34-49d8-aebc-30d4cb25babc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""f30f585a-e461-4096-a72c-7cb9ecba292e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""6dd2a0fc-023b-4485-870d-746ad71ec76f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Slot1"",
                    ""type"": ""Button"",
                    ""id"": ""b405ca8f-ea1a-4bd9-985a-69eddea1d10a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Slot2"",
                    ""type"": ""Button"",
                    ""id"": ""dd9b64a7-ea67-4dee-92e1-2be70bceb8c1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Slot3"",
                    ""type"": ""Button"",
                    ""id"": ""7ce47a52-39d3-4d9c-a2ef-679d73437b8a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Slot4"",
                    ""type"": ""Button"",
                    ""id"": ""e15099e3-6a08-4032-9e65-699d214273e0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Slot5"",
                    ""type"": ""Button"",
                    ""id"": ""6a170a1f-ac63-4578-a5d5-cbebeb874360"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Slot6"",
                    ""type"": ""Button"",
                    ""id"": ""38d1be4a-4062-4344-adcd-2620a1c859ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Slot7"",
                    ""type"": ""Button"",
                    ""id"": ""598832e7-bae9-4f91-a9c8-8fd2a5b12b69"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""801d1fd4-7835-464f-a33c-98a4c2cf89c7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Button"",
                    ""id"": ""4b649600-eda5-49a6-9c60-77f6f34f7afd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""5799930f-b5d6-477e-a289-54f837aa412d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""86f854f4-d42f-4630-9df8-7c6efba3376a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d5f55372-1bd6-4978-ab89-8699558ff4b9"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""809ebb01-c01e-49ad-8584-0d4c903364c0"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b2d727ab-e758-466d-b80c-c675ed5903ec"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""60c3e88e-3ae3-4b36-9d70-74c02fbde91d"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""148ed7c5-27ef-4ca3-849e-54f60232bebd"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""58190a3b-6d9b-4201-b6f5-a8aa457d7fa4"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a888c42a-5151-4660-a924-e04dd1c198a0"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40709960-dcb9-447c-9522-9824b009be25"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8394015a-286f-49e2-8f5f-d8ebfa31372c"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c5ba870-4c80-4c91-b24e-934f7783737c"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07eee192-bba6-44ab-9141-4e0c95b252da"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slot1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""231e4c9d-7e79-4b83-8529-5c3bedd5d44d"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slot2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0ebacfb2-53da-4ff5-9576-c06b7591516c"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slot3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""144c18be-9cbf-47e7-9e65-fcfcffacf543"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slot4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5945ac59-c6b7-4ec9-8830-513ebec1ca75"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slot5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""375c6a22-fdec-4eaf-b27e-3a4541a09f6a"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slot6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f7596329-92cf-4aaa-b02e-ce1c0758e815"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slot7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""380755f2-d600-45cd-8756-d6ee143f56d0"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2f9bff92-5695-4c02-8799-2a61948b9236"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""MouseKeyboard"",
            ""bindingGroup"": ""MouseKeyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // PlayerGround
        m_PlayerGround = asset.FindActionMap("PlayerGround", throwIfNotFound: true);
        m_PlayerGround_Movement = m_PlayerGround.FindAction("Movement", throwIfNotFound: true);
        m_PlayerGround_Jump = m_PlayerGround.FindAction("Jump", throwIfNotFound: true);
        m_PlayerGround_Reload = m_PlayerGround.FindAction("Reload", throwIfNotFound: true);
        m_PlayerGround_Look = m_PlayerGround.FindAction("Look", throwIfNotFound: true);
        m_PlayerGround_Sprint = m_PlayerGround.FindAction("Sprint", throwIfNotFound: true);
        m_PlayerGround_Crouch = m_PlayerGround.FindAction("Crouch", throwIfNotFound: true);
        m_PlayerGround_Inventory = m_PlayerGround.FindAction("Inventory", throwIfNotFound: true);
        m_PlayerGround_Interaction = m_PlayerGround.FindAction("Interaction", throwIfNotFound: true);
        m_PlayerGround_Slot1 = m_PlayerGround.FindAction("Slot1", throwIfNotFound: true);
        m_PlayerGround_Slot2 = m_PlayerGround.FindAction("Slot2", throwIfNotFound: true);
        m_PlayerGround_Slot3 = m_PlayerGround.FindAction("Slot3", throwIfNotFound: true);
        m_PlayerGround_Slot4 = m_PlayerGround.FindAction("Slot4", throwIfNotFound: true);
        m_PlayerGround_Slot5 = m_PlayerGround.FindAction("Slot5", throwIfNotFound: true);
        m_PlayerGround_Slot6 = m_PlayerGround.FindAction("Slot6", throwIfNotFound: true);
        m_PlayerGround_Slot7 = m_PlayerGround.FindAction("Slot7", throwIfNotFound: true);
        m_PlayerGround_Fire = m_PlayerGround.FindAction("Fire", throwIfNotFound: true);
        m_PlayerGround_Aim = m_PlayerGround.FindAction("Aim", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerGround
    private readonly InputActionMap m_PlayerGround;
    private IPlayerGroundActions m_PlayerGroundActionsCallbackInterface;
    private readonly InputAction m_PlayerGround_Movement;
    private readonly InputAction m_PlayerGround_Jump;
    private readonly InputAction m_PlayerGround_Reload;
    private readonly InputAction m_PlayerGround_Look;
    private readonly InputAction m_PlayerGround_Sprint;
    private readonly InputAction m_PlayerGround_Crouch;
    private readonly InputAction m_PlayerGround_Inventory;
    private readonly InputAction m_PlayerGround_Interaction;
    private readonly InputAction m_PlayerGround_Slot1;
    private readonly InputAction m_PlayerGround_Slot2;
    private readonly InputAction m_PlayerGround_Slot3;
    private readonly InputAction m_PlayerGround_Slot4;
    private readonly InputAction m_PlayerGround_Slot5;
    private readonly InputAction m_PlayerGround_Slot6;
    private readonly InputAction m_PlayerGround_Slot7;
    private readonly InputAction m_PlayerGround_Fire;
    private readonly InputAction m_PlayerGround_Aim;
    public struct PlayerGroundActions
    {
        private @PlayerInputs m_Wrapper;
        public PlayerGroundActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerGround_Movement;
        public InputAction @Jump => m_Wrapper.m_PlayerGround_Jump;
        public InputAction @Reload => m_Wrapper.m_PlayerGround_Reload;
        public InputAction @Look => m_Wrapper.m_PlayerGround_Look;
        public InputAction @Sprint => m_Wrapper.m_PlayerGround_Sprint;
        public InputAction @Crouch => m_Wrapper.m_PlayerGround_Crouch;
        public InputAction @Inventory => m_Wrapper.m_PlayerGround_Inventory;
        public InputAction @Interaction => m_Wrapper.m_PlayerGround_Interaction;
        public InputAction @Slot1 => m_Wrapper.m_PlayerGround_Slot1;
        public InputAction @Slot2 => m_Wrapper.m_PlayerGround_Slot2;
        public InputAction @Slot3 => m_Wrapper.m_PlayerGround_Slot3;
        public InputAction @Slot4 => m_Wrapper.m_PlayerGround_Slot4;
        public InputAction @Slot5 => m_Wrapper.m_PlayerGround_Slot5;
        public InputAction @Slot6 => m_Wrapper.m_PlayerGround_Slot6;
        public InputAction @Slot7 => m_Wrapper.m_PlayerGround_Slot7;
        public InputAction @Fire => m_Wrapper.m_PlayerGround_Fire;
        public InputAction @Aim => m_Wrapper.m_PlayerGround_Aim;
        public InputActionMap Get() { return m_Wrapper.m_PlayerGround; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerGroundActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerGroundActions instance)
        {
            if (m_Wrapper.m_PlayerGroundActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnMovement;
                @Jump.started -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnJump;
                @Reload.started -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnReload;
                @Reload.performed -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnReload;
                @Reload.canceled -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnReload;
                @Look.started -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnLook;
                @Sprint.started -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSprint;
                @Crouch.started -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnCrouch;
                @Crouch.performed -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnCrouch;
                @Crouch.canceled -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnCrouch;
                @Inventory.started -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnInventory;
                @Inventory.performed -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnInventory;
                @Inventory.canceled -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnInventory;
                @Interaction.started -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnInteraction;
                @Interaction.performed -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnInteraction;
                @Interaction.canceled -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnInteraction;
                @Slot1.started -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSlot1;
                @Slot1.performed -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSlot1;
                @Slot1.canceled -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSlot1;
                @Slot2.started -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSlot2;
                @Slot2.performed -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSlot2;
                @Slot2.canceled -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSlot2;
                @Slot3.started -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSlot3;
                @Slot3.performed -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSlot3;
                @Slot3.canceled -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSlot3;
                @Slot4.started -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSlot4;
                @Slot4.performed -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSlot4;
                @Slot4.canceled -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSlot4;
                @Slot5.started -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSlot5;
                @Slot5.performed -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSlot5;
                @Slot5.canceled -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSlot5;
                @Slot6.started -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSlot6;
                @Slot6.performed -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSlot6;
                @Slot6.canceled -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSlot6;
                @Slot7.started -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSlot7;
                @Slot7.performed -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSlot7;
                @Slot7.canceled -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnSlot7;
                @Fire.started -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnFire;
                @Fire.performed -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnFire;
                @Fire.canceled -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnFire;
                @Aim.started -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnAim;
                @Aim.performed -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnAim;
                @Aim.canceled -= m_Wrapper.m_PlayerGroundActionsCallbackInterface.OnAim;
            }
            m_Wrapper.m_PlayerGroundActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @Crouch.started += instance.OnCrouch;
                @Crouch.performed += instance.OnCrouch;
                @Crouch.canceled += instance.OnCrouch;
                @Inventory.started += instance.OnInventory;
                @Inventory.performed += instance.OnInventory;
                @Inventory.canceled += instance.OnInventory;
                @Interaction.started += instance.OnInteraction;
                @Interaction.performed += instance.OnInteraction;
                @Interaction.canceled += instance.OnInteraction;
                @Slot1.started += instance.OnSlot1;
                @Slot1.performed += instance.OnSlot1;
                @Slot1.canceled += instance.OnSlot1;
                @Slot2.started += instance.OnSlot2;
                @Slot2.performed += instance.OnSlot2;
                @Slot2.canceled += instance.OnSlot2;
                @Slot3.started += instance.OnSlot3;
                @Slot3.performed += instance.OnSlot3;
                @Slot3.canceled += instance.OnSlot3;
                @Slot4.started += instance.OnSlot4;
                @Slot4.performed += instance.OnSlot4;
                @Slot4.canceled += instance.OnSlot4;
                @Slot5.started += instance.OnSlot5;
                @Slot5.performed += instance.OnSlot5;
                @Slot5.canceled += instance.OnSlot5;
                @Slot6.started += instance.OnSlot6;
                @Slot6.performed += instance.OnSlot6;
                @Slot6.canceled += instance.OnSlot6;
                @Slot7.started += instance.OnSlot7;
                @Slot7.performed += instance.OnSlot7;
                @Slot7.canceled += instance.OnSlot7;
                @Fire.started += instance.OnFire;
                @Fire.performed += instance.OnFire;
                @Fire.canceled += instance.OnFire;
                @Aim.started += instance.OnAim;
                @Aim.performed += instance.OnAim;
                @Aim.canceled += instance.OnAim;
            }
        }
    }
    public PlayerGroundActions @PlayerGround => new PlayerGroundActions(this);
    private int m_MouseKeyboardSchemeIndex = -1;
    public InputControlScheme MouseKeyboardScheme
    {
        get
        {
            if (m_MouseKeyboardSchemeIndex == -1) m_MouseKeyboardSchemeIndex = asset.FindControlSchemeIndex("MouseKeyboard");
            return asset.controlSchemes[m_MouseKeyboardSchemeIndex];
        }
    }
    public interface IPlayerGroundActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnInventory(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
        void OnSlot1(InputAction.CallbackContext context);
        void OnSlot2(InputAction.CallbackContext context);
        void OnSlot3(InputAction.CallbackContext context);
        void OnSlot4(InputAction.CallbackContext context);
        void OnSlot5(InputAction.CallbackContext context);
        void OnSlot6(InputAction.CallbackContext context);
        void OnSlot7(InputAction.CallbackContext context);
        void OnFire(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
    }
}
